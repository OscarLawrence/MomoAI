#!/usr/bin/env python3
"""
On-demand Documentation Generation
Generates contextual docs from knowledge base
"""
import asyncio
from pathlib import Path
import sys
import json
from datetime import datetime

# Add the project root to the Python path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root / "libs" / "python" / "momo-kb"))

async def generate_docs():
    """Generate documentation from knowledge base"""
    print("Starting documentation generation...")
    
    try:
        # Create docs/generated directory
        output_dir = project_root / "docs" / "generated"
        output_dir.mkdir(parents=True, exist_ok=True)
        
        # Check if knowledge base exists
        kb_dir = project_root / "data" / "knowledge-base"
        if not kb_dir.exists():
            print("⚠ Warning: Knowledge base not found. Run kb-ingest first.")
            return
        
        # Load knowledge base data (placeholder)
        kb_file = kb_dir / "codebase.json"
        if kb_file.exists():
            with open(kb_file, 'r') as f:
                kb_data = json.load(f)
                print(f"  Loaded KB data: {kb_data}")
        
        # Generate module documentation
        modules_to_document = [
            "momo-kb",
            "momo-vector-store", 
            "momo-graph-store",
            "momo-store-document",
            "momo-logger"
        ]
        
        for module_name in modules_to_document:
            print(f"  Generating docs for {module_name}")
            
            # Generate documentation content (placeholder)
            doc_content = f"""# {module_name} Documentation

Generated on: {datetime.now().isoformat()}

## Overview
This is auto-generated documentation for the {module_name} module.

## Architecture
TODO: Extract from knowledge base

## API Reference  
TODO: Extract from code analysis

## Usage Examples
TODO: Extract from scripts and tests

## Performance Characteristics
TODO: Extract from benchmarks

---
Generated by MomoAI Documentation System
"""
            
            # Write documentation file
            doc_file = output_dir / f"{module_name}.md"
            doc_file.write_text(doc_content)
            print(f"    ✓ Created {doc_file}")
        
        # Generate index file
        index_content = f"""# MomoAI Generated Documentation

Generated on: {datetime.now().isoformat()}

## Modules

"""
        
        for module_name in modules_to_document:
            index_content += f"- [{module_name}](./{module_name}.md)\n"
        
        index_content += """
## About

This documentation is automatically generated from the MomoAI knowledge base using DVC pipelines.
"""
        
        index_file = output_dir / "index.md"
        index_file.write_text(index_content)
        print(f"    ✓ Created {index_file}")
        
        print("✓ Documentation generation completed successfully")
        
    except Exception as e:
        print(f"✗ Error during documentation generation: {e}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(generate_docs())